#
# OPTIONS
#

# Set default shell
set-option -g default-shell "/usr/bin/zsh"

# Automatically renumber window numbers on closing a pane
set-option -g renumber-windows on

# Turn off distracting border highlight.
set-option -ga pane-active-border-style bg=default,fg=default

# Color representation
set-option -g default-terminal "tmux-256color"

# Don't wait after esc
set-option -s escape-time 0

# Set buffer history size
set-option -g history-limit 10000

# Enable Mouse
set-option -g mouse on

# Enable vi bindings
set-window-option -g mode-keys vi

#
# COLORS
#

# Set Dracula colors
white='#f8f8f2'
gray='#44475a'
dark_gray='#282a36'
light_purple='#bd93f9'
dark_purple='#6272a4'
cyan='#8be9fd'
green='#50fa7b'
orange='#ffb86c'
red='#ff5555'
pink='#ff79c6'
yellow='#f1fa8c'

#
# STATUS BAR
#

set-option -g status-style "bg=${gray},fg=${white},bold,italics"
set-option -g status-left-length 40
set-option -g status-left "#[bg=${green},fg=${gray},bold] #S "
set-option -g status-right-length 75
set-option -g status-right "#(echo #{pane_current_path} | sed \"s|$HOME|~|\") "
set-option -g status-interval 3
set-option -w -g window-status-format "#[fg=${white},bg=${gray}]  #I #W  "
set-option -w -g window-status-current-format "#[fg=${white},bg=${dark_purple}]  #I #W  "

#
# KEYBINDINGS
#

# Reload tmux config
bind-key r source-file ~/.tmux.conf \; display-message ' Config reloaded!'

# Navigate between windows
bind-key -n M-n next-window
bind-key -n M-p previous-window

# Open new/split panes with the path of the current pane.
bind-key -n M-c new-window -c '#{pane_current_path}' 

# Intuitive window-splitting keys.
bind-key -n M-| split-window -h -c '#{pane_current_path}'
bind-key -n M-- split-window -v -c '#{pane_current_path}'

# Change into buffer mode
bind-key -n M-Escape copy-mode

# Jump to last prompt keybinding
bind-key -n M-BSpace copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "â–¶ "\; send-keys Escape

# Focus specific window
bind-key -n M-i selectw -t nvim

# # Navigate between tmux panes and vim splits seamlessly
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'M-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'M-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'M-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'M-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'M-l' if -F '#{pane_at_right}' '' 'select-pane -R'

